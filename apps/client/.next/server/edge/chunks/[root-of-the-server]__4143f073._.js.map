{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/client/middleware.ts"],"sourcesContent":["// // middleware.ts\r\n// import { NextResponse } from \"next/server\"\r\n// import type { NextRequest } from \"next/server\"\r\n// import jwt from \"jsonwebtoken\"\r\n\r\n// const JWT_SECRET = process.env.JWT_SECRET || \"supersecret\"\r\n\r\n// export function middleware(req: NextRequest) {\r\n//   const token = req.cookies.get(\"token\")?.value\r\n\r\n//   // Redirect unauthenticated users to /login\r\n//   if (!token) {\r\n//     if (req.nextUrl.pathname !== \"/login\") {\r\n//       return NextResponse.redirect(new URL(\"/login\", req.url))\r\n//     }\r\n//     return NextResponse.next()\r\n//   }\r\n\r\n//   try {\r\n//     jwt.verify(token, JWT_SECRET) // validate\r\n//     return NextResponse.next()\r\n//   } catch {\r\n//     return NextResponse.redirect(new URL(\"/login\", req.url))\r\n//   }\r\n// }\r\n\r\n// export const config = {\r\n//   matcher: [\"/((?!_next/static|_next/image|favicon.ico|login).*)\"],\r\n// }\r\n"],"names":[],"mappings":"AAAA,mBAAmB;AACnB,6CAA6C;AAC7C,iDAAiD;AACjD,iCAAiC;AAEjC,6DAA6D;AAE7D,iDAAiD;AACjD,kDAAkD;AAElD,gDAAgD;AAChD,kBAAkB;AAClB,+CAA+C;AAC/C,iEAAiE;AACjE,QAAQ;AACR,iCAAiC;AACjC,MAAM;AAEN,UAAU;AACV,gDAAgD;AAChD,iCAAiC;AACjC,cAAc;AACd,+DAA+D;AAC/D,MAAM;AACN,IAAI;AAEJ,0BAA0B;AAC1B,sEAAsE;AACtE,IAAI"}}]
}