{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/client/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\r\nimport type { NextRequest } from \"next/server\"\r\n\r\nexport function middleware(req: NextRequest) {\r\n  const token = req.cookies.get(\"token\")?.value\r\n  const { pathname } = req.nextUrl\r\n\r\n  // Public routes that don't need authentication\r\n  const publicRoutes = [\"/login\", \"/register\"];\r\n  \r\n  // If has token and trying to access auth pages (login/register)\r\n  if (token && publicRoutes.includes(pathname)) {\r\n    return NextResponse.redirect(new URL(\"/\", req.url));\r\n  }\r\n\r\n  // If no token and trying to access protected routes\r\n  if (!token && !publicRoutes.includes(pathname)) {\r\n    const loginUrl = new URL(\"/login\", req.url);\r\n    loginUrl.searchParams.set(\"from\", pathname); // Save the page they tried to visit\r\n    return NextResponse.redirect(loginUrl);\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\"/((?!_next/static|_next/image|favicon.ico|api).*)\"],\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAGO,SAAS,WAAW,GAAgB;IACzC,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU;IACxC,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAEhC,+CAA+C;IAC/C,MAAM,eAAe;QAAC;QAAU;KAAY;IAE5C,gEAAgE;IAChE,IAAI,SAAS,aAAa,QAAQ,CAAC,WAAW;QAC5C,OAAO,kNAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;IACnD;IAEA,oDAAoD;IACpD,IAAI,CAAC,SAAS,CAAC,aAAa,QAAQ,CAAC,WAAW;QAC9C,MAAM,WAAW,IAAI,IAAI,UAAU,IAAI,GAAG;QAC1C,SAAS,YAAY,CAAC,GAAG,CAAC,QAAQ,WAAW,oCAAoC;QACjF,OAAO,kNAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO,kNAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAoD;AAChE"}}]
}