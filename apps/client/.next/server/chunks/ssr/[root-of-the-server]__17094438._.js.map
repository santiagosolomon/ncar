{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/MIS/ncar/apps/client/src/app/register/page.tsx"],"sourcesContent":["// 'use client';\r\n\r\n// import { useState } from 'react';\r\n// import { useRouter } from 'next/navigation';\r\n// import { Button } from '@/components/ui/button';\r\n// import { Input } from '@/components/ui/input';\r\n// import { Label } from '@/components/ui/label';\r\n// import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from '@/components/ui/select';\r\n\r\n// export default function RegisterPage() {\r\n//   const router = useRouter();\r\n//   const [formData, setFormData] = useState({\r\n//     email: '',\r\n//     password: '',\r\n//     organization: '',\r\n//   });\r\n\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleRegister = async (e: React.FormEvent) => {\r\n//     e.preventDefault();\r\n\r\n//     const res = await fetch('/api/auth/register', {\r\n//       method: 'POST',\r\n//       headers: { 'Content-Type': 'application/json' },\r\n//       body: JSON.stringify(formData),\r\n//     });\r\n\r\n//     if (res.ok) {\r\n//       router.push('/login'); // redirect to login after success\r\n//     } else {\r\n//       alert('Registration failed');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex min-h-screen items-center justify-center bg-gray-50\">\r\n//       <div className=\"w-full max-w-md rounded-lg bg-white p-6 shadow\">\r\n//         <h1 className=\"mb-6 text-2xl font-bold text-center\">Create an Account</h1>\r\n\r\n//         <form onSubmit={handleRegister} className=\"space-y-4\">\r\n//           <div>\r\n//             <Label htmlFor=\"email\">Email</Label>\r\n//             <Input\r\n//               id=\"email\"\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div>\r\n//             <Label htmlFor=\"password\">Password</Label>\r\n//             <Input\r\n//               id=\"password\"\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               value={formData.password}\r\n//               onChange={handleChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div>\r\n//             <Label>Organization</Label>\r\n//             <Select\r\n//               onValueChange={(value) =>\r\n//                 setFormData({ ...formData, organization: value })\r\n//               }\r\n//             >\r\n//               <SelectTrigger>\r\n//                 <SelectValue placeholder=\"Select organization\" />\r\n//               </SelectTrigger>\r\n//               <SelectContent>\r\n//                 <SelectItem value=\"ptc\">PTC</SelectItem>\r\n//                 <SelectItem value=\"gicc\">GICC</SelectItem>\r\n//               </SelectContent>\r\n//             </Select>\r\n//           </div>\r\n\r\n//           <Button type=\"submit\" className=\"w-full\">\r\n//             Register\r\n//           </Button>\r\n//         </form>\r\n\r\n//         <p className=\"mt-4 text-center text-sm\">\r\n//           Already have an account?{' '}\r\n//           <a href=\"/login\" className=\"text-blue-600 hover:underline\">\r\n//             Log in\r\n//           </a>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB,oCAAoC;AACpC,+CAA+C;AAC/C,mDAAmD;AACnD,iDAAiD;AACjD,iDAAiD;AACjD,0GAA0G;AAE1G,2CAA2C;AAC3C,gCAAgC;AAChC,+CAA+C;AAC/C,iBAAiB;AACjB,oBAAoB;AACpB,wBAAwB;AACxB,QAAQ;AAER,uEAAuE;AACvE,qEAAqE;AACrE,OAAO;AAEP,2DAA2D;AAC3D,0BAA0B;AAE1B,sDAAsD;AACtD,wBAAwB;AACxB,yDAAyD;AACzD,wCAAwC;AACxC,UAAU;AAEV,oBAAoB;AACpB,kEAAkE;AAClE,eAAe;AACf,sCAAsC;AACtC,QAAQ;AACR,OAAO;AAEP,aAAa;AACb,iFAAiF;AACjF,yEAAyE;AACzE,qFAAqF;AAErF,iEAAiE;AACjE,kBAAkB;AAClB,mDAAmD;AACnD,qBAAqB;AACrB,2BAA2B;AAC3B,6BAA6B;AAC7B,6BAA6B;AAC7B,uCAAuC;AACvC,wCAAwC;AACxC,yBAAyB;AACzB,iBAAiB;AACjB,mBAAmB;AAEnB,kBAAkB;AAClB,yDAAyD;AACzD,qBAAqB;AACrB,8BAA8B;AAC9B,gCAAgC;AAChC,gCAAgC;AAChC,0CAA0C;AAC1C,wCAAwC;AACxC,yBAAyB;AACzB,iBAAiB;AACjB,mBAAmB;AAEnB,kBAAkB;AAClB,0CAA0C;AAC1C,sBAAsB;AACtB,0CAA0C;AAC1C,oEAAoE;AACpE,kBAAkB;AAClB,gBAAgB;AAChB,gCAAgC;AAChC,oEAAoE;AACpE,iCAAiC;AACjC,gCAAgC;AAChC,2DAA2D;AAC3D,6DAA6D;AAC7D,iCAAiC;AACjC,wBAAwB;AACxB,mBAAmB;AAEnB,sDAAsD;AACtD,uBAAuB;AACvB,sBAAsB;AACtB,kBAAkB;AAElB,mDAAmD;AACnD,0CAA0C;AAC1C,wEAAwE;AACxE,qBAAqB;AACrB,iBAAiB;AACjB,eAAe;AACf,eAAe;AACf,aAAa;AACb,OAAO;AACP,IAAI","debugId":null}}]
}