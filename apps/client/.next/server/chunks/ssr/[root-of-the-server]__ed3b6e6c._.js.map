{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/MIS/ncar/apps/client/src/lib/axios.ts"],"sourcesContent":["// lib/axios.ts\r\nimport axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5000/api\", \r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add request interceptor for debugging\r\napi.interceptors.request.use(request => {\r\n  console.log('Starting Request:', request)\r\n  return request\r\n});\r\n\r\n// Add response interceptor for debugging\r\napi.interceptors.response.use(response => {\r\n  console.log('Response:', response)\r\n  return response\r\n}, error => {\r\n  console.error('Response Error:', error)\r\n  return Promise.reject(error)\r\n});\r\n"],"names":[],"mappings":"AAAA,eAAe;;;;;AACf;;AAEO,MAAM,MAAM,kKAAK,CAAC,MAAM,CAAC;IAC9B,SAAS,iEAAmC;IAC5C,SAAS;QACP,gBAAgB;IAClB;AACF;AAEA,wCAAwC;AACxC,IAAI,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC3B,QAAQ,GAAG,CAAC,qBAAqB;IACjC,OAAO;AACT;AAEA,yCAAyC;AACzC,IAAI,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IAC5B,QAAQ,GAAG,CAAC,aAAa;IACzB,OAAO;AACT,GAAG,CAAA;IACD,QAAQ,KAAK,CAAC,mBAAmB;IACjC,OAAO,QAAQ,MAAM,CAAC;AACxB","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/MIS/ncar/apps/client/src/services/auth.ts"],"sourcesContent":["// services/auth.ts\r\nimport { api } from \"@/lib/axios\"\r\n\r\nexport interface AuthResponse {\r\n  token: string\r\n  user: {\r\n    _id: string\r\n    email: string\r\n    role: string\r\n    organization: string\r\n  }\r\n}\r\n\r\nexport const login = async (email: string, password: string): Promise<AuthResponse> => {\r\n  const { data } = await api.post(\"/auth/login\", { email, password })\r\n  // Store token and user info\r\n  localStorage.setItem(\"token\", data.token)\r\n  localStorage.setItem(\"user\", JSON.stringify(data.user))\r\n  // Set default auth header\r\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${data.token}`\r\n  return data\r\n}\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\")\r\n  localStorage.removeItem(\"user\")\r\n  delete api.defaults.headers.common[\"Authorization\"]\r\n}\r\n\r\nexport const getStoredAuth = (): { token: string | null; user: any | null } => {\r\n  if (typeof window === \"undefined\") return { token: null, user: null }\r\n  \r\n  const token = localStorage.getItem(\"token\")\r\n  const userStr = localStorage.getItem(\"user\")\r\n  const user = userStr ? JSON.parse(userStr) : null\r\n  \r\n  return { token, user }\r\n}"],"names":[],"mappings":"AAAA,mBAAmB;;;;;;;;;AACnB;;AAYO,MAAM,QAAQ,OAAO,OAAe;IACzC,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,4IAAG,CAAC,IAAI,CAAC,eAAe;QAAE;QAAO;IAAS;IACjE,4BAA4B;IAC5B,aAAa,OAAO,CAAC,SAAS,KAAK,KAAK;IACxC,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC,KAAK,IAAI;IACrD,0BAA0B;IAC1B,4IAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,KAAK,KAAK,EAAE;IACrE,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,aAAa,UAAU,CAAC;IACxB,aAAa,UAAU,CAAC;IACxB,OAAO,4IAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB;AACrD;AAEO,MAAM,gBAAgB;IAC3B,wCAAmC,OAAO;QAAE,OAAO;QAAM,MAAM;IAAK;;;IAEpE,MAAM;IACN,MAAM;IACN,MAAM;AAGR","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/MIS/ncar/apps/client/src/context/AuthContext.tsx"],"sourcesContent":["// context/AuthContext.tsx\r\n\"use client\"\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\"\r\nimport { useRouter, usePathname } from \"next/navigation\"\r\nimport { getStoredAuth } from \"@/services/auth\"\r\n\r\ninterface AuthContextType {\r\n  user: any | null\r\n  token: string | null\r\n  organization: string | null\r\n  setAuth: (token: string | null, user: any | null) => void\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  user: null,\r\n  token: null,\r\n  organization: null,\r\n  setAuth: () => {}\r\n})\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const router = useRouter()\r\n  const pathname = usePathname()\r\n  const [auth, setAuth] = useState(getStoredAuth())\r\n\r\n  const handleSetAuth = (token: string | null, user: any | null) => {\r\n    setAuth({ token, user })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Check auth on mount and redirect if needed\r\n    const { token, user } = getStoredAuth()\r\n    \r\n    if (!token && pathname !== \"/login\") {\r\n      router.push(\"/login\")\r\n    }\r\n    \r\n    if (token && pathname === \"/login\") {\r\n      router.push(\"/\")\r\n    }\r\n  }, [pathname, router])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user: auth.user,\r\n      token: auth.token,\r\n      organization: auth.user?.organization,\r\n      setAuth: handleSetAuth,\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;;;AAG1B;AACA;AACA;AAJA;;;;;AAaA,MAAM,4BAAc,IAAA,wOAAa,EAAkB;IACjD,MAAM;IACN,OAAO;IACP,cAAc;IACd,SAAS,KAAO;AAClB;AAEO,MAAM,UAAU,IAAM,IAAA,qOAAU,EAAC;AAEjC,SAAS,aAAa,EAAE,QAAQ,EAAiC;IACtE,MAAM,SAAS,IAAA,iKAAS;IACxB,MAAM,WAAW,IAAA,mKAAW;IAC5B,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,mOAAQ,EAAC,IAAA,0JAAa;IAE9C,MAAM,gBAAgB,CAAC,OAAsB;QAC3C,QAAQ;YAAE;YAAO;QAAK;IACxB;IAEA,IAAA,oOAAS,EAAC;QACR,6CAA6C;QAC7C,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAA,0JAAa;QAErC,IAAI,CAAC,SAAS,aAAa,UAAU;YACnC,OAAO,IAAI,CAAC;QACd;QAEA,IAAI,SAAS,aAAa,UAAU;YAClC,OAAO,IAAI,CAAC;QACd;IACF,GAAG;QAAC;QAAU;KAAO;IAErB,qBACE,gQAAC,YAAY,QAAQ;QAAC,OAAO;YAC3B,MAAM,KAAK,IAAI;YACf,OAAO,KAAK,KAAK;YACjB,cAAc,KAAK,IAAI,EAAE;YACzB,SAAS;QACX;kBACG;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/MIS/ncar/apps/client/src/app/providers.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport { ReactNode, useState } from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\nimport { AuthProvider } from \"@/context/AuthContext\";\r\n\r\nexport default function Providers({ children }: { children: ReactNode }) {\r\n    // keep QueryClient stable across re-renders\r\n    const [queryClient] = useState(() => new QueryClient());\r\n\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <AuthProvider>\r\n                {children}\r\n            </AuthProvider>\r\n        </QueryClientProvider>\r\n    );\r\n}\r\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAAA;AACA;AAJA;;;;;AAMe,SAAS,UAAU,EAAE,QAAQ,EAA2B;IACnE,4CAA4C;IAC5C,MAAM,CAAC,YAAY,GAAG,IAAA,mOAAQ,EAAC,IAAM,IAAI,8MAAW;IAEpD,qBACI,gQAAC,+NAAmB;QAAC,QAAQ;kBACzB,cAAA,gQAAC,gKAAY;sBACR;;;;;;;;;;;AAIjB","debugId":null}}]
}